" Plugin manager https://github.com/junegunn/vim-plug
"
" Run
" :PlugInstall to install new plugins
" :PlugStatus to view plugin status
"
" Specify a directory for plugins
call plug#begin('~/.vim/plugged')

" Shorthand notation fetches https://github.com/jamessan/vim-gnupg
Plug 'jamessan/vim-gnupg'

Plug 'altercation/vim-colors-solarized'

Plug 'plasticboy/vim-markdown'

" Tab variable completion
Plug 'ervandew/supertab'

" JSON-specific mode rather than the default javascript mode
Plug 'elzr/vim-json'

" Docker file syntax hilighting
Plug 'ekalinin/Dockerfile.vim'

" Dark code syntax mode that is easier on my eyes than solarized dark
Plug 'tomasiser/vim-code-dark'

" Coffeescript syntax
Plug 'kchmck/vim-coffee-script'

" Improved tabs when running in the terminal instead of implementing it myself as described in:
" https://vi.stackexchange.com/questions/11276/print-full-filename-in-tabs-when-using-terminal-vim
" http://vimhelp.appspot.com/tabpage.txt.html#setting-tabline
Plug 'webdevel/tabulous'

" Syntax checking with many plugins
" Plug 'vim-syntastic/syntastic'

" Realtime syntax checking for Vim 8+
Plug 'w0rp/ale'

" Show a git diff in the gutter
Plug 'airblade/vim-gitgutter'

" Improved status line
Plug 'itchyny/lightline.vim'

" Change surrpunding characters
Plug 'tpope/vim-surround'

" Add :Rename to rename a file
Plug 'danro/rename.vim'

" Improve netrw experience
Plug 'tpope/vim-vinegar'

call plug#end()

" Detect the system name for customizations
let s:uname=substitute(system('uname'), '\n', '', '')

" Better colors for a dark/light background
if has('gui_running')
    set background=dark
    set lines=60 columns=100
" Set the font for windows
"    set guifont=Consolas:h9:cANSI
" Set the font for OSX
"    set guifont=Consolas:h12
" Set the font for linux (must have the font installed)
    set guifont=Consolas\ 9
"    set guifont=Source\ Code\ Pro\ Light\ 9

else
    set background=dark
endif

" --------------------------------------------------------------------------------
" Color schemes
"
" Solarized color scheme: http://ethanschoonover.com/solarized
"
" Option for low contrast
" let g:solarized_contrast="high"
"
" Variables that may need to be set for the solarized color palette. Enable this in OSX terminal when
" using Solarized color scheme. Disable it in Konsole or the background is yellowish.
if s:uname == "Darwin"
    let g:solarized_termcolors=256
endif

" May need to set this if the terminal only supports 256 colors (especially in light mode)
set t_Co=256

" codedark is easier on my eyes for coding
colorscheme codedark

" Customize color scheme based on file type when entering a buffer. I use this because
" markdown looks better in Solarized.
"autocmd BufEnter *.md colorscheme solarized | set background=dark
"autocmd BufLeave *.md colorscheme codedark

" --------------------------------------------------------------------------------
" General options

" Case-sensitive if search contains an uppercase character
set ignorecase
set smartcase

" Syntax hilighting on
syntax enable

" Allow any buffer to be hidden (keeping its changes) without first writing to a file.
" Useful when switching buffers during testing.
set hidden

" Show line numbers (can't cut and paste in the terminal)
if has('gui_running')
    set number
endif

" Indent 4 spaces per indent and Use spaces for indentation
set tabstop=4
set shiftwidth=4
set expandtab
set textwidth=100

" Since in PHP braces are not required inside 'case/default' blocks, by default they are indented at
" the same level than the 'switch()' to avoid unnecessary indentation
" indent 'case:' and 'default:' statements in switch() blocks:
let g:PHP_vintage_case_default_indent = 1

" Shortcut for toggling paste mode (disabling auto-indent when pasting)
set pastetoggle=<F3>

" Map ctrl-a to select all text on the screen (rather than incrementing an integer)
map <C-a> <esc>ggVG<CR>

" Map navigation keys that I don't use to tab commands
map <C-l> :tabn<CR>
map <C-h> :tabp<CR>
map <C-n> :tabnew<CR>

" Map Ctrl-Backspace/Del to delete the previous/next word in insert mode.
imap <C-BS> <C-W>
imap <C-Del> <C-O>dw

" Search for the tags file. The ';' at the end causes a recursively upward search
" Use './tags;' to start searching in the directory of the current file rather than
" Vim's working directory
set tags=.tags;

" Set current directory the same as the directory of the file
set autochdir

" Indent relative to current line
" set autoindent
" set cindent
" Don't automatically continue comments on the next line
" set formatoptions-=c formatoptions-=r formatoptions-=o

" Some plugins (e.g., filetype plugins) are loaded after the .vimrc file and overwrite
" options defined here. Automatically re-apply formatting options when any file is loaded.
" We can apply it to all filetypes or whenever a new file is read.
" Note that formatoptions-=cro does not work.
"
" Running ':verb set fo' will show you where an option was last set
" Running :set <option>? will display the options current value
autocmd FileType * setlocal formatoptions-=c formatoptions-=r formatoptions-=o foldmethod=manual

" Show matching braces but not gt/lt or we get a visual bell on object property dereferences
set showmatch
set matchpairs-=<:>

" Show line/column information
set ruler

" Disable beeps
set vb t_vb=

" Do not hilight search fields
set nohls

" Force vim to reset the terminal and clear the color scheme (if running in a terminal).
" See http://vimdoc.sourceforge.net/htmldoc/autocmd.html
" See http://superuser.com/questions/942597/why-does-my-vim-colorscheme-stay-after-i-close-vim
"f ! has('gui_running')
"    autocmd VimLeave * printf '\e[0m'
"endif

" Display filename (tail) and plus for modified files in tabs instead of whole path
set guitablabel=%t\ %M

" --------------------------------------------------------------------------------
" File Explorer (netrw) options :Vexplore
" See http://vimdoc.sourceforge.net/htmldoc/pi_netrw.html
" I am using vim-vinegar to make it easier to access netrw

let g:netrw_banner = 0
" Listing style (0=simple, 1=show timestamps, 2=multi-column, 3=tree)
let g:netrw_liststyle = 3
" Open new files in (0=same window, 1=hsplit, 2=vsplit, 3=new tab, 4=prev window)
let g:netrw_browse_split = 0
" Split right
let g:netrw_altv = 1
let g:netrw_winsize = 25

" Don't show dotfiles
let g:netrw_list_hide='^\.'

" --------------------------------------------------------------------------------
" vim-json config (https://github.com/elzr/vim-json)

" Disable concealing of quotes by default. Makes it easier to cut and paste.
let g:vim_json_syntax_conceal = 0

" --------------------------------------------------------------------------------
" Markdown configuration

" In markdown mode, don't automatically indent lists. I want to do this manually.
let g:vim_markdown_new_list_item_indent = 0

" --------------------------------------------------------------------------------
" Lightline configuration
" Fix for dark/missing status line
set laststatus=2

" --------------------------------------------------------------------------------
" ack.vim configuration

if executable('ag')
  let g:ackprg = 'ag --vimgrep'
endif

" --------------------------------------------------------------------------------
" Ale configuration
" Note that Ale will use the phpcs.xml file in the root directory

" Don't constantly lint, give me a chance to type (default 200ms)
let g:ale_lint_delay=5000


" --------------------------------------------------------------------------------
" Syntastic configuration
"set statusline+=%f
"set statusline+=\ %#warningmsg#
"set statusline+=%{SyntasticStatuslineFlag()}
"set statusline+=%*

"let g:syntastic_always_populate_loc_list = 1
"let g:syntastic_auto_loc_list = 1
"let g:syntastic_check_on_open = 1
"let g:syntastic_check_on_wq = 0

" See https://github.com/vim-syntastic/syntastic/blob/master/doc/syntastic-checkers.txt
" See https://github.com/vim-syntastic/syntastic/blob/master/doc/syntastic.txt
" Note that only the part after 'syntastic-javascript-' is needed
"let g:syntastic_json_checkers = ['jsonlint']
"let g:syntastic_php_checkers = ['php', 'phpcs']
" let g:syntastic_php_php_phpcs_exec = "/home/smgallo/bin/phpcs --standard=~/src/xdmod-qa/style/configs/phpcs.xml"
"let g:syntastic_php_phpcs_args = '--standard=/home/smgallo/src/xdmod-qa/style/configs/phpcs.xml'
" Extra debugging information. Useful for testing arg and exec modification. Use ":mes" to view messages in vim
" let g:syntastic_debug = 7
" let g:syntastic_debug_file = "~/syntastic.log"
